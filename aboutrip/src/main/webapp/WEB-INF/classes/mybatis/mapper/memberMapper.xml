<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<select id="loginMember" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT userNum, userId, userPwd, nickName, enable, FailCnt, profile_pic FROM member1 
		WHERE userId = #{userId} AND (enable = 1 OR enable = 0)
	</select>
	<insert id="insertMember1" parameterType="com.aboutrip.app.member.Member">
		<selectKey keyProperty="userNum" resultType="int" order="BEFORE">
				select member_seq.NEXTVAL FROM dual
			</selectKey>
		<if test='profile_pic != null'>
			INSERT INTO member1(userNum, userId, userPwd, userName, nickName, enable, FailCnt, profile_pic)
			VALUES (#{userNum}, #{userId}, #{userPwd}, #{userName}, #{nickName}, 1, 0, #{profile_pic})
		</if>
		<if test='profile_pic == null'>
			INSERT INTO member1(userNum, userId, userPwd, userName, nickName, enable, FailCnt)
			VALUES (#{userNum}, #{userId}, #{userPwd}, #{userName}, #{nickName}, 1, 0)
		</if>
	</insert>
	<insert id="insertMember2" parameterType="com.aboutrip.app.member.Member">
			INSERT INTO member2(userNum, address1, address2, tel, birth, gender, zip)
			VALUES (#{userNum}, #{address1}, #{address2}, #{tel},#{birth}, #{gender}, #{zip})
	</insert>
	<select id="readMember" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT m1.userNum, userId, userPwd, userName, nickName, enable, FailCnt, profile_pic, address1,
		address2, tel, TO_CHAR(birth, 'YYYY-MM-DD')birth, gender, paymentNum, created_date, zip FROM member1 m1
		LEFT OUTER JOIN member2 m2 ON m1.userNum = m2.userNum 
		WHERE userId = #{userId}
	</select>
	
	<select id="checkMember" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT COUNT(*) FROM member1 WHERE userId = #{userId}
	</select>
	
	<select id="checkName" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT userNum, userId, userPwd, userName, nickName, enable, FailCnt, profile_pic FROM member1
		WHERE userName = #{userName}
	</select>
	
	<select id="checkTel" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT userNum, address1, address2, tel, birth, gender, paymentNum, created_date, zip FROM member2
		WHERE tel = #{tel}
	</select>
	<update id="updatepwd" parameterType="com.aboutrip.app.member.Member">
		UPDATE member1 SET userPwd=#{userPwd} WHERE userNum = #{userNum}
	</update>
	<update id="updateMember1" parameterType="com.aboutrip.app.member.Member">
		UPDATE member1 SET userPwd=#{userPwd}, nickName=#{nickName},profile_pic=#{profile_pic} WHERE userNum = #{userNum}
	</update>
	<update id="updateMember2" parameterType="com.aboutrip.app.member.Member">
		UPDATE member2 SET address1=#{address1}, address2=#{address2}, tel=#{tel}, birth=#{birth} WHERE userNum = #{userNum}
	</update>
	
	<update id="deleteMember1" parameterType="com.aboutrip.app.member.Member">
		UPDATE member1 SET ENABLE = 2, profile_pic = null, userName= '-' WHERE userNum = #{userNum}
	</update>
	<update id="deleteMember2" parameterType="com.aboutrip.app.member.Member">
		UPDATE member2 SET address1 = '-', address2='-', tel='-', birth='-', gender='-', paymentNum=null, zip='-'
		WHERE userNum = #{userNum} 
	</update>
	
	<select id="listMember" parameterType="map" resultType="com.aboutrip.app.member.Member">
		SELECT m1.userNum, userId, userPwd, userName, nickName, enable, FailCnt, profile_pic, address1,
		address2, tel, birth, gender, paymentNum, created_date FROM member m1
		LEFT OUTER JOIN member1 m1 ON m1.userNum = m2.userNum 
		ORDER BY groupNum DESC, orderNo ASC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="dataCount" parameterType="com.aboutrip.app.member.Member">
		SELECT NVL(COUNT(userNum),0) FROM member1
	</select>
	<select id="loginseq" resultType="Integer">
       SELECT login_seq.NEXTVAL FROM dual 
    </select>
	<insert id="insertIpaddr" parameterType="com.aboutrip.app.member.Member">
		INSERT INTO logRecored(logNum, userNum, ipaddr, logDate) VALUES (#{logNum}, #{userNum}, #{ipaddr}, SYSDATE)
	</insert>
</mapper>