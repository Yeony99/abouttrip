<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<select id="loginMember" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT userNum, userId, userPwd, nickName, enable, FailCnt, profile_pic FROM member1 
		WHERE userId = #{userId} AND (enable = 1 OR enable = 0)
	</select>
	<insert id="insertMember1" parameterType="com.aboutrip.app.member.Member">
		<selectKey keyProperty="userNum" resultType="int" order="BEFORE">
				select member_seq.NEXTVAL FROM dual
			</selectKey>
		INSERT INTO member1(userNum, userId, userPwd, userName, nickName, enable, FailCnt, profile_pic)
		VALUES (#{userNum}, #{userId}, #{userPwd}, #{userName}, #{nickName}, 1, 0, #{profile_pic, jdbcType=VARCHAR})
	</insert>
	<insert id="insertMember2" parameterType="com.aboutrip.app.member.Member">
			INSERT INTO member2(userNum, address1, address2, tel, birth, gender, zip,created_date)
			VALUES (#{userNum}, #{address1}, #{address2}, #{tel},#{birth}, #{gender}, #{zip},SYSDATE)
	</insert>
	<select id="readMember" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT m1.userNum, userId, userPwd, userName, nickName, enable, FailCnt, profile_pic, address1,
		address2, tel, TO_CHAR(birth, 'YYYY-MM-DD')birth, gender, paymentNum, created_date, zip FROM member1 m1
		LEFT OUTER JOIN member2 m2 ON m1.userNum = m2.userNum 
		WHERE userId = #{userId}
	</select>
	
	<select id="checkMember" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT COUNT(*) FROM member1 WHERE userId = #{userId}
	</select>
	
	<select id="checkName" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT userNum, userId, userPwd, userName, nickName, enable, FailCnt FROM member1
		WHERE userName = #{userName}
	</select>
	
	<select id="checkTel" parameterType="String" resultType="com.aboutrip.app.member.Member">
		SELECT userNum, address1, address2, tel, birth, gender, paymentNum, created_date, zip FROM member2
		WHERE tel = #{tel}
	</select>
	<update id="updatepwd" parameterType="com.aboutrip.app.member.Member">
		UPDATE member1 SET userPwd=#{userPwd} WHERE userNum = #{userNum}
	</update>
	<update id="updateMember1" parameterType="com.aboutrip.app.member.Member">
		UPDATE member1 SET userPwd=#{userPwd}, nickName=#{nickName}, profile_pic=#{profile_pic, jdbcType=VARCHAR} WHERE userNum = #{userNum}
	</update>
	<update id="updateMember2" parameterType="com.aboutrip.app.member.Member">
		UPDATE member2 SET address1=#{address1}, address2=#{address2}, tel=#{tel}, birth=#{birth} WHERE userNum = #{userNum}
	</update>
	
	<update id="deleteMember1" parameterType="com.aboutrip.app.member.Member">
		UPDATE member1 SET ENABLE = 2, profile_pic = null, userName= '-' WHERE userNum = #{userNum}
	</update>
	<update id="deleteMember2" parameterType="com.aboutrip.app.member.Member">
		UPDATE member2 SET address1 = '-', address2='-', tel='-', birth=TO_DATE('0001-01-01','YYYY-MM-DD'), gender='-', paymentNum=null, zip='-'
		WHERE userNum = #{userNum} 
	</update>
	<update id="deletePayment" parameterType="com.aboutrip.app.member.Member">
		DELETE from payment WHERE userNum = #{userNum}
	</update>
	<update id="deletefollowing" parameterType="com.aboutrip.app.member.Member">
		DELETE from follow WHERE followingUser = #{userNum}
	</update>
	<update id="deletefollower" parameterType="com.aboutrip.app.member.Member">
		DELETE from follow WHERE followerUser = #{userNum}
	</update>
	
	<select id="listMember" parameterType="map" resultType="com.aboutrip.app.member.Member">
		SELECT m1.userNum, userId, userPwd, userName, nickName, enable, FailCnt, profile_pic, address1,
		address2, tel, birth, gender, paymentNum, created_date FROM member m1
		LEFT OUTER JOIN member2 m2 ON m1.userNum = m2.userNum 
		ORDER BY groupNum DESC, orderNo ASC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="dataCount" parameterType="Integer">
		SELECT NVL(COUNT(userNum),0) FROM member1
	</select>
	<select id="payCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(cardNum),0) FROM payment WHERE userNum = #{userNum}
	</select>
	<select id="logCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(logNum),0) FROM logrecored WHERE userNum = #{userNum}
	</select>
	<select id="followingCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(followingNum),0) FROM follow WHERE followerUser= #{followerUser}
	</select>
	<select id="followerCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(followingNum),0) FROM follow WHERE followingUser= #{followingUser}
	</select>
	<select id="loginseq" resultType="Integer">
       SELECT login_seq.NEXTVAL FROM dual 
    </select>
    <select id="paymentseq" resultType="Integer">
       SELECT payment_seq.NEXTVAL FROM dual 
    </select>
    <select id="follow_seq" resultType="Integer">
       SELECT follow_seq.NEXTVAL FROM dual 
    </select>
	<insert id="insertIpaddr" parameterType="com.aboutrip.app.member.Member">
		INSERT INTO logRecored(logNum, userNum, ipaddr, logDate) VALUES (#{logNum}, #{userNum}, #{ipaddr}, SYSDATE)
	</insert>
	<insert id="insertPayment" parameterType="com.aboutrip.app.member.Member">
		INSERT INTO payment(cardNum, cardName, paymentCode, userNum, created_date) VALUES(#{cardNum}, #{cardName}, #{paymentCode}, #{userNum}, SYSDATE)
	</insert>
	<select id="listPayment" parameterType="map" resultType="com.aboutrip.app.member.Member">
		SELECT cardNum, cardName, paymentCode, userNum,created_date FROM payment
		WHERE userNum = #{userNum}
		ORDER BY cardNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="logList" parameterType="map" resultType="com.aboutrip.app.member.Member">
		SELECT LogNum, userNum, ipAddr, LogDate FROM logrecored
		WHERE userNum = #{userNum}
		ORDER BY LogNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	<insert id="insertfollow1">
		INSERT INTO follow(followNum, following_date, followingUser, followerUser) VALUES(#{followNum}, SYSDATE, #{follow}, #{nickName})
	</insert>
	<insert id="insertfollow2">
		INSERT INTO follow(followNum, following_date, followingUser, followerUser) VALUES(#{followNum}, SYSDATE, #{nickName}, #{follow})
	</insert>
	<select id="followinglist" parameterType="map" resultType="com.aboutrip.app.member.Member">
		SELECT followingNum, following_date, f.followingUser, f.followerUser,  m1.nickName followingNickname, m2.nickName followerNickname FROM follow f
		LEFT OUTER JOIN member1 m1 ON f.followingUser = m1.userNum
		LEFT OUTER JOIN member1 m2 ON f.followerUser = m2.userNum
		WHERE followerUser = #{followerUser}
		ORDER BY followingNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	<select id="followerlist" parameterType="map" resultType="com.aboutrip.app.member.Member">
		SELECT followingNum, following_date, f.followingUser, f.followerUser, m1.nickName followingNickname, m2.nickName followerNickname  FROM follow f
		LEFT OUTER JOIN member1 m1 ON f.followingUser = m1.userNum
		LEFT OUTER JOIN member1 m2 ON f.followerUser = m2.userNum
		WHERE followingUser = #{followingUser}
		ORDER BY followingNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	<delete id="deleteFollwer" parameterType="map">
		delete from follow WHERE followingUser =#{followingUser} AND followerUser=#{followerUser}
	</delete>
</mapper>