<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="scheduler">
	<sql id="where-list">
		<if test="condition=='all'">
			( INSTR(subject, #{keyword}) &gt; 0
				OR INSTR(content, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject'">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content'">
			INSTR(content, #{keyword}) &gt; 0 
		</if>
		<if test="condition=='nickName'">
			nickName=#{keyword}
		</if>
		<if test="condition=='created'">
			( TO_CHAR(p.created, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(p.created, 'YYYYMMDD') = #{keyword} )
		</if>
	</sql>
	
	<insert id="insertScheduler" parameterType="com.aboutrip.app.scheduler.Scheduler">
		INSERT INTO	scheduler(num, user_num, subject, created, color, check_in, check_out, memo) VALUES(scheduler_seq.NEXTVAL,#{user_num}, #{subject}, SYSDATE, #{color},#{check_in, jdbcType=VARCHAR},#{check_out, jdbcType=VARCHAR}, #{memo, jdbcType=VARCHAR})
	</insert>
	<select id="listMonth" parameterType="map" resultType="com.aboutrip.app.scheduler.Scheduler">
		select num, user_num, subject, TO_CHAR(created,'YYYY-MM-DD') created, color, 
		TO_CHAR(check_in,'YYYY-MM-DD')check_in, TO_CHAR(check_out,'YYYY-MM-DD')check_out, memo FROM scheduler
		WHERE	user_num = #{user_num}
		ORDER BY check_in ASC, num DESC
	</select>
	<update id="updateScheduler" parameterType="map">
		UPDATE scheduler SET
			subject=#{subject}, color=#{color}, check_in=#{check_in, jdbcType=VARCHAR}, 
			check_out=#{check_out, jdbcType=VARCHAR},
			memo=#{memo, jdbcType=VARCHAR}
		WHERE num=#{num} AND user_num=#{user_num}
	</update>
	<delete id="deleteScheduler" parameterType="map">
		DELETE FROM scheduler WHERE num=#{num} AND user_num=#{user_num}
	</delete>
	
	<select id="scheduler_seq" resultType="Integer">
       SELECT scheduler_seq.NEXTVAL FROM dual 
    </select>
    
    <insert id="insertMate" parameterType="com.aboutrip.app.scheduler.Mate">
    	INSERT INTO mate(num, user_num, subject, content, ctgNum, created, people_num, current_num, start_date, end_date,answer)
    	VALUES(mate_seq.NEXTVAL, #{user_num}, #{subject}, #{content}, #{ctgNum}, SYSDATE, #{people_num}, 0,
    	#{start_date, jdbcType=VARCHAR}, #{end_date, jdbcType=VARCHAR},0)
    </insert>
    
    <select id="mateCount" resultType="Integer">
    	SELECT NVL(COUNT(*),0) FROM mate
    </select>
    
    <insert id="insertMateReply" parameterType="com.aboutrip.app.scheduler.Mate">
    	INSERT INTO mate_reply(reply_num, user_num, mate_num, content, created, reply) VALUES (mate_reply_seq.NEXTVAL, #{user_num}, #{num}, #{content}, SYSDATE)
    </insert>
    
    <select id="listMate" parameterType="map" resultType="com.aboutrip.app.scheduler.Mate">
    	SELECT num, m.user_num, subject, content, ctgNum, TO_CHAR(created, 'YYYY-MM-DD')created, people_num, current_num, TO_CHAR(start_date,'YYYY-MM-DD')start_date, TO_CHAR(end_date,'YYYY-MM-DD')end_date,
    	nickName FROM mate m
    	JOIN member1 m1 ON m.user_num = m1.userNum
    	ORDER BY num DESC
    	OFFSET #{offset} ROW FETCH FIRST #{rows} ROWS ONLY
    </select>
    <select id="updateMate" parameterType="Integer">
    	UPDATE mate SET answer = answer+1 WHERE num = #{num}
    </select>
    <delete id="deleteMate" parameterType="map">
    	DELETE FROM mate WHERE num=#{num} AND user_num = #{user_num}
    </delete>
    
    <insert id="insertReply" parameterType="com.aboutrip.app.scheduler.MateReply">
    	INSERT INTO mate_reply(reply_num, user_num, mate_num, content, created,reply_answer) VALUES (mate_reply_seq.NEXTVAL, #{user_num}, #{mate_num}, #{content}, SYSDATE,#{reply_answer})
    </insert>
    
    <select id="listReply" parameterType="map" resultType="com.aboutrip.app.scheduler.MateReply">
    	SELECT reply_num, r.user_num, r.mate_num, r.content, answerCount, r.reply_answer, r.created FROM mate_reply r
    	LEFT JOIN mate m ON r.mate_num = m.num
    	LEFT OUTER JOIN (
			SELECT reply_answer, COUNT(*) answerCount
			FROM mate_reply WHERE reply_answer!=0 GROUP BY reply_answer
		) a ON reply_Num = a.reply_answer
    	WHERE r.mate_num = #{mate_num} 
    	ORDER BY reply_num DESC
    	OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
    </select>
    
    <select id="replyCount" parameterType="map" resultType="Integer">
    	SELECT NVL(COUNT(*),0) FROM mate_reply
    	WHERE mate_num = #{mate_num}
    </select>
    
    <select id="replyAnswerCount" parameterType="map" resultType="Integer">
    	SELECT NVL(COUNT(*),0) FROM mate_reply
    	WHERE reply_answer = #{reply_answer}
    </select>
    
    <delete id="deleteReply" parameterType="map">
    	DELETE FROM mate_reply WHERE reply_num=#{reply_num}
    	<if test="mode=='reply'">
			OR reply_answer=#{reply_num}
		</if>
    </delete>
    
    <insert id="insertReview" parameterType="com.aboutrip.app.scheduler.Review">
    	INSERT INTO scheduler_review(num, user_num, subject, content, created, imageFileName) VALUES (scheduler_review_seq.NEXTVAL,
    	#{user_num}, #{subject}, #{content}, SYSDATE, #{imageFileName})
    </insert>
    
    <select id="readReview" parameterType="Integer" resultType="com.aboutrip.app.scheduler.Review">
    	SELECT num, r.user_num, nickName, subject, content, imageFilename, created FROM scheduler_review r
    	JOIN member1 m ON r.user_num = m.userNum
    	WHERE num = #{num}
    </select>
    
    <select id="reviewCount" parameterType="map" resultType="Integer">
    	SELECT NVL(COUNT(*),0) FROM scheduler_review
    	<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where> 
    </select>
    
    <select id="listReview" parameterType="map" resultType="com.aboutrip.app.scheduler.Review">
    	SELECT num, r.user_num, nickName, subject, imageFilename, content 
		       TO_CHAR(created, 'yyyy-mm-dd') created
		FROM shceduler_review r
		JOIN member1 m ON r.user_num = m.userNum
		<where>
			<if test="keyword != null and keyword != ''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
    </select>
    
    <select id="preReadPhoto" parameterType="map" resultType="com.aboutrip.app.scheduler.Review">
		SELECT num, subject
		FROM scheduler_review r
		JOIN member1 m ON r.user_num=m.userNum
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<select id="nextReadPhoto" parameterType="map" resultType="com.aboutrip.app.scheduler.Review">
		SELECT num, subject
		FROM scheduler_review r
		JOIN member1 m ON r.user_num=m.userNum
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<update id="updateReview" parameterType="com.aboutrip.app.scheduler.Review">
		UPDATE scheduler_review SET subject=#{subject}, imageFilename=#{imageFilename}, content=#{content} WHERE num = #{num}
	</update>
	
	<delete id="deleteReview" parameterType="Integer">
		DELETE FROM scheduler_review WHERE num=#{num}
	</delete>
</mapper>